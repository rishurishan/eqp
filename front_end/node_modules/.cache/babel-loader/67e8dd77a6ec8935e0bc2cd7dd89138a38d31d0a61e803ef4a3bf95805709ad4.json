{"ast":null,"code":"import axios from\"axios\";import{BASE_URL}from\"../api/urls\";// import { refreshToken } from '../api/refresh';\n// import { toast } from 'react-toastify';\nconst api=axios.create({baseURL:BASE_URL,headers:{Accept:\"application/json\",\"Content-Type\":\"application/json\"}});api.interceptors.response.use(response=>response,async error=>{const originalRequest=error.config;//   const refresh = sessionStorage.getItem('refresh_token');\nif(error.response.status===401){const accessToken=sessionStorage.getItem(\"token\");originalRequest.headers.Authorization=\"Bearer \".concat(accessToken);return api(originalRequest);}else{sessionStorage.clear();window.location.href=\"/\";}return Promise.reject(error);});export default api;","map":{"version":3,"names":["axios","BASE_URL","api","create","baseURL","headers","Accept","interceptors","response","use","error","originalRequest","config","status","accessToken","sessionStorage","getItem","Authorization","concat","clear","window","location","href","Promise","reject"],"sources":["/home/mohammed/Downloads/medical-report-frontend-main/src/services/interceptor.js"],"sourcesContent":["import axios from \"axios\";\nimport { BASE_URL } from \"../api/urls\";\n// import { refreshToken } from '../api/refresh';\n// import { toast } from 'react-toastify';\n\nconst api = axios.create({\n  baseURL: BASE_URL,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n  },\n});\n\napi.interceptors.response.use(\n  (response) => response,\n  async (error) => {\n    const originalRequest = error.config;\n    //   const refresh = sessionStorage.getItem('refresh_token');\n    if (error.response.status === 401) {\n      const accessToken = sessionStorage.getItem(\"token\");\n      originalRequest.headers.Authorization = `Bearer ${accessToken}`;\n\n      return api(originalRequest);\n    } else {\n      sessionStorage.clear();\n      window.location.href = \"/\";\n    }\n    return Promise.reject(error);\n  }\n);\n\nexport default api;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,KAAQ,aAAa,CACtC;AACA;AAEA,KAAM,CAAAC,GAAG,CAAGF,KAAK,CAACG,MAAM,CAAC,CACvBC,OAAO,CAAEH,QAAQ,CACjBI,OAAO,CAAE,CACPC,MAAM,CAAE,kBAAkB,CAC1B,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEFJ,GAAG,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC1BD,QAAQ,EAAKA,QAAQ,CACtB,KAAO,CAAAE,KAAK,EAAK,CACf,KAAM,CAAAC,eAAe,CAAGD,KAAK,CAACE,MAAM,CACpC;AACA,GAAIF,KAAK,CAACF,QAAQ,CAACK,MAAM,GAAK,GAAG,CAAE,CACjC,KAAM,CAAAC,WAAW,CAAGC,cAAc,CAACC,OAAO,CAAC,OAAO,CAAC,CACnDL,eAAe,CAACN,OAAO,CAACY,aAAa,WAAAC,MAAA,CAAaJ,WAAW,CAAE,CAE/D,MAAO,CAAAZ,GAAG,CAACS,eAAe,CAAC,CAC7B,CAAC,IAAM,CACLI,cAAc,CAACI,KAAK,CAAC,CAAC,CACtBC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,GAAG,CAC5B,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACd,KAAK,CAAC,CAC9B,CACF,CAAC,CAED,cAAe,CAAAR,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
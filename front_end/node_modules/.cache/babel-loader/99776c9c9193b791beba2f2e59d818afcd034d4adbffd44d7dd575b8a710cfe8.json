{"ast":null,"code":"import React,{useState}from\"react\";import\"./ReportForm.css\";import{jsPDF}from\"jspdf\";import autoTable from'jspdf-autotable';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ReportForm=()=>{const[formData,setFormData]=useState({clinicName:\"\",physicianName:\"\",physicianContact:\"\",patientFirstName:\"\",patientLastName:\"\",patientDob:\"\",patientContact:\"\",chiefComplaint:\"\",consultationNote:\"\",clinicLogo:null// Added for the logo image file\n});const handleChange=e=>{const{name,value}=e.target;setFormData(prevState=>({...prevState,[name]:value}));};const handleFileChange=e=>{const{name}=e.target;const file=e.target.files[0];setFormData(prevState=>({...prevState,[name]:file}));};// **************pdf generation*********************************\nconst generatePDF=()=>{const doc=new jsPDF();const formatDate=date=>{return date.toISOString().split('T')[0];};const timestamp=formatDate(new Date());const filename=\"CR_\".concat(formData.patientLastName,\"_\").concat(formData.patientFirstName,\"_\").concat(formData.patientDob,\".pdf\");// Page number footer callback\nconst footer=data=>{let str='Page '+doc.internal.getNumberOfPages();// Add a footer with the timestamp and IP (static example here)\ndoc.setFontSize(10);doc.text(\"This report is generated on \".concat(timestamp),data.settings.margin.left,doc.internal.pageSize.height-10);doc.text(str,doc.internal.pageSize.width-data.settings.margin.right-10,doc.internal.pageSize.height-10);};// Before this, you should check if clinicLogo is not null and handle it as in your original code\nif(formData.clinicLogo){const reader=new FileReader();reader.onload=function(event){const imgData=event.target.result;doc.addImage(imgData,'JPEG',15,40,50,50);// Adjust position (x, y) and size (width, height) as needed\n// Add other content after the image has been added\naddContentToPDF(doc);doc.save(filename);};reader.onerror=function(error){console.log('Error: ',error);};reader.readAsDataURL(formData.clinicLogo);}else{// If no logo, just add content and save\naddContentToPDF(doc);doc.save(filename);}// Header\ndoc.setFontSize(18);doc.text('Medical Report',14,22);// Optionally add more formatting here\n// You would then call autoTable as follows\nautoTable(doc,{html:'#your-table-id',// Your table ID if you have the data in an HTML table\ndidDrawPage:data=>{if(formData.clinicLogo){// You might have to adjust these coordinates according to the dimensions of your logo\ndoc.addImage(formData.clinicLogo,'PNG',data.settings.margin.left,15,30,15);}},margin:{top:30},startY:doc.internal.pageSize.height/2,// You might want to calculate this based on your page content\ntheme:'plain',// Choose a theme or customize it as needed\nfootStyles:{fillColor:[255,255,255]},// Optional styling for the footer\nwillDrawCell:data=>{// This can be used to format cells as needed, e.g., for text formatting\n},didDrawPage:footer// Adding the footer to each page\n});// Saving the document with the dynamic name\ndoc.save(filename);};function addContentToPDF(doc){const tableColumn=[\"Field\",\"Value\"];const tableRows=[];Object.keys(formData).forEach(key=>{if(key!==\"clinicLogo\"){// Avoid adding the logo file reference as a text\ntableRows.push([key,formData[key]instanceof File?\"File Uploaded\":formData[key]]);}});// Optionally adjust startY based on your image size if logo is present\ndoc.autoTable({head:[tableColumn],body:tableRows,startY:100// Adjust this value as needed to place the table below your image\n});}// **************pdf generation*********************************\nconst handleSubmit=e=>{e.preventDefault();const data=new FormData();Object.keys(formData).forEach(key=>{data.append(key,formData[key]);});// Here you would typically send the data to a server or process it\ngeneratePDF();console.log(\"Form data ready to be sent to the server:\",data);};return/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"report-form\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Clinic Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"clinicName\",value:formData.clinicName,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Clinic Logo\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",name:\"clinicLogo\",onChange:handleFileChange,accept:\"image/*\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Physician Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"physicianName\",value:formData.physicianName,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Physician Contact\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"physicianContact\",value:formData.physicianContact,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Patient First Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"patientFirstName\",value:formData.patientFirstName,onChange:handleChange})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Patient Last Name\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"patientLastName\",value:formData.patientLastName,onChange:handleChange})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Patient DOB\"}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",name:\"patientDob\",value:formData.patientDob,onChange:handleChange,placeholder:\"dd/mm/yyyy\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Patient Contact\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"patientContact\",value:formData.patientContact,onChange:handleChange})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Chief Complaint\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"chiefComplaint\",value:formData.chiefComplaint,onChange:handleChange,maxLength:\"5000\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Consultation Note\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"consultationNote\",value:formData.consultationNote,onChange:handleChange,maxLength:\"5000\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Generate Report\"})]});};export default ReportForm;","map":{"version":3,"names":["React","useState","jsPDF","autoTable","jsx","_jsx","jsxs","_jsxs","ReportForm","formData","setFormData","clinicName","physicianName","physicianContact","patientFirstName","patientLastName","patientDob","patientContact","chiefComplaint","consultationNote","clinicLogo","handleChange","e","name","value","target","prevState","handleFileChange","file","files","generatePDF","doc","formatDate","date","toISOString","split","timestamp","Date","filename","concat","footer","data","str","internal","getNumberOfPages","setFontSize","text","settings","margin","left","pageSize","height","width","right","reader","FileReader","onload","event","imgData","result","addImage","addContentToPDF","save","onerror","error","console","log","readAsDataURL","html","didDrawPage","top","startY","theme","footStyles","fillColor","willDrawCell","tableColumn","tableRows","Object","keys","forEach","key","push","File","head","body","handleSubmit","preventDefault","FormData","append","onSubmit","className","children","type","onChange","accept","placeholder","maxLength"],"sources":["/home/mohammed/Downloads/medical-report-frontend-main/src/pages/Report/ReportForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ReportForm.css\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\n\nconst ReportForm = () => {\n  const [formData, setFormData] = useState({\n    clinicName: \"\",\n    physicianName: \"\",\n    physicianContact: \"\",\n    patientFirstName: \"\",\n    patientLastName: \"\",\n    patientDob: \"\",\n    patientContact: \"\",\n    chiefComplaint: \"\",\n    consultationNote: \"\",\n    clinicLogo: null, // Added for the logo image file\n  });\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleFileChange = (e) => {\n    const { name } = e.target;\n    const file = e.target.files[0];\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: file,\n    }));\n  };\n\n  // **************pdf generation*********************************\n\n  const generatePDF = () => {\n    const doc = new jsPDF();\n  \n    const formatDate = (date) => {\n      return date.toISOString().split('T')[0];\n    };\n  \n    const timestamp = formatDate(new Date());\n    const filename = `CR_${formData.patientLastName}_${formData.patientFirstName}_${formData.patientDob}.pdf`;\n  \n    // Page number footer callback\n    const footer = (data) => {\n      let str = 'Page ' + doc.internal.getNumberOfPages();\n      // Add a footer with the timestamp and IP (static example here)\n      doc.setFontSize(10);\n      doc.text(`This report is generated on ${timestamp}`, data.settings.margin.left, doc.internal.pageSize.height - 10);\n      doc.text(str, doc.internal.pageSize.width - data.settings.margin.right - 10, doc.internal.pageSize.height - 10);\n    };\n  \n    // Before this, you should check if clinicLogo is not null and handle it as in your original code\n    if (formData.clinicLogo) {\n      const reader = new FileReader();\n  \n      reader.onload = function(event) {\n        const imgData = event.target.result;\n        doc.addImage(imgData, 'JPEG', 15, 40, 50, 50); // Adjust position (x, y) and size (width, height) as needed\n  \n        // Add other content after the image has been added\n        addContentToPDF(doc);\n        doc.save(filename);\n      };\n  \n      reader.onerror = function(error) {\n        console.log('Error: ', error);\n      };\n  \n      reader.readAsDataURL(formData.clinicLogo);\n    } else {\n      // If no logo, just add content and save\n      addContentToPDF(doc);\n      doc.save(filename);\n    }\n  \n    // Header\n    doc.setFontSize(18);\n    doc.text('Medical Report', 14, 22);\n    \n    // Optionally add more formatting here\n  \n    // You would then call autoTable as follows\n    autoTable(doc, {\n      html: '#your-table-id', // Your table ID if you have the data in an HTML table\n      didDrawPage: (data) => {\n        if (formData.clinicLogo) {\n          // You might have to adjust these coordinates according to the dimensions of your logo\n          doc.addImage(formData.clinicLogo, 'PNG', data.settings.margin.left, 15, 30, 15);\n        }\n      },\n      margin: { top: 30 },\n      startY: doc.internal.pageSize.height / 2, // You might want to calculate this based on your page content\n      theme: 'plain', // Choose a theme or customize it as needed\n      footStyles: { fillColor: [255, 255, 255] }, // Optional styling for the footer\n      willDrawCell: data => {\n        // This can be used to format cells as needed, e.g., for text formatting\n      },\n      didDrawPage: footer, // Adding the footer to each page\n    });\n  \n    // Saving the document with the dynamic name\n    doc.save(filename);\n  };\n  \n  function addContentToPDF(doc) {\n    const tableColumn = [\"Field\", \"Value\"];\n    const tableRows = [];\n  \n    Object.keys(formData).forEach(key => {\n      if (key !== \"clinicLogo\") { // Avoid adding the logo file reference as a text\n        tableRows.push([key, formData[key] instanceof File ? \"File Uploaded\" : formData[key]]);\n      }\n    });\n  \n    // Optionally adjust startY based on your image size if logo is present\n    doc.autoTable({\n      head: [tableColumn],\n      body: tableRows,\n      startY: 100, // Adjust this value as needed to place the table below your image\n    });\n  }\n  \n // **************pdf generation*********************************\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const data = new FormData();\n    Object.keys(formData).forEach((key) => {\n      data.append(key, formData[key]);\n    });\n    // Here you would typically send the data to a server or process it\n    generatePDF();\n    console.log(\"Form data ready to be sent to the server:\", data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"report-form\">\n      <div className=\"form-group\">\n        <label>Clinic Name</label>\n        <input\n          type=\"text\"\n          name=\"clinicName\"\n          value={formData.clinicName}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Clinic Logo</label>\n        <input\n          type=\"file\"\n          name=\"clinicLogo\"\n          onChange={handleFileChange}\n          accept=\"image/*\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Physician Name</label>\n        <input\n          type=\"text\"\n          name=\"physicianName\"\n          value={formData.physicianName}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Physician Contact</label>\n        <input\n          type=\"text\"\n          name=\"physicianContact\"\n          value={formData.physicianContact}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"form-row\">\n        <div className=\"form-group\">\n          <label>Patient First Name</label>\n          <input\n            type=\"text\"\n            name=\"patientFirstName\"\n            value={formData.patientFirstName}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Patient Last Name</label>\n          <input\n            type=\"text\"\n            name=\"patientLastName\"\n            value={formData.patientLastName}\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\">\n        <div className=\"form-group\">\n          <label>Patient DOB</label>\n          <input\n            type=\"date\"\n            name=\"patientDob\"\n            value={formData.patientDob}\n            onChange={handleChange}\n            placeholder=\"dd/mm/yyyy\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Patient Contact</label>\n          <input\n            type=\"text\"\n            name=\"patientContact\"\n            value={formData.patientContact}\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label>Chief Complaint</label>\n        <textarea\n          name=\"chiefComplaint\"\n          value={formData.chiefComplaint}\n          onChange={handleChange}\n          maxLength=\"5000\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Consultation Note</label>\n        <textarea\n          name=\"consultationNote\"\n          value={formData.consultationNote}\n          onChange={handleChange}\n          maxLength=\"5000\"\n        />\n      </div>\n      <button type=\"submit\">Generate Report</button>\n    </form>\n  );\n};\n\nexport default ReportForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
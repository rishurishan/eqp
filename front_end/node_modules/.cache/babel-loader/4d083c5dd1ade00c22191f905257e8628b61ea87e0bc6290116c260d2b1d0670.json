{"ast":null,"code":"var _jsxFileName = \"/home/mohammed/Downloads/medical-report-frontend-main/front_end/src/pages/Report/ReportForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ReportForm.css\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReportForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    clinicName: \"\",\n    physicianName: \"\",\n    physicianContact: \"\",\n    patientFirstName: \"\",\n    patientLastName: \"\",\n    patientDob: \"\",\n    patientContact: \"\",\n    chiefComplaint: \"\",\n    consultationNote: \"\",\n    clinicLogo: null // Added for the logo image file\n  });\n  const [formErrors, setFormErrors] = useState({});\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleFileChange = e => {\n    const {\n      name\n    } = e.target;\n    const file = e.target.files[0];\n    setFormData(prevState => ({\n      ...prevState,\n      [name]: file\n    }));\n  };\n  const validateForm = () => {\n    const errors = {};\n    // Example validation, you can customize as needed\n    if (!formData.clinicName.trim()) {\n      errors.clinicName = \"Clinic name is required\";\n    }\n    if (!formData.physicianName.trim()) {\n      errors.physicianName = \"Physician name is required\";\n    }\n    if (!formData.patientFirstName.trim()) {\n      errors.patientFirstName = \"Patient first name is required\";\n    }\n    if (!formData.patientLastName.trim()) {\n      errors.patientLastName = \"Patient last name is required\";\n    }\n    if (!formData.patientDob) {\n      errors.patientDob = \"Patient date of birth is required\";\n    }\n    if (!formData.chiefComplaint.trim()) {\n      errors.chiefComplaint = \"Chief complaint is required\";\n    }\n    if (!formData.consultationNote.trim()) {\n      errors.consultationNote = \"Consultation note is required\";\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // **************pdf generation*********************************\n\n  const generatePDF = () => {\n    const doc = new jsPDF();\n    const formatDate = date => {\n      return date.toISOString().split('T')[0];\n    };\n    const timestamp = formatDate(new Date());\n    const filename = `CR_${formData.patientLastName}_${formData.patientFirstName}_${formData.patientDob}.pdf`;\n\n    // Page number footer callback\n    const footer = data => {\n      let str = 'Page ' + doc.internal.getNumberOfPages();\n      // Add a footer with the timestamp and IP (static example here)\n      doc.setFontSize(10);\n      doc.text(`This report is generated on ${timestamp}`, data.settings.margin.left, doc.internal.pageSize.height - 10);\n      doc.text(str, doc.internal.pageSize.width - data.settings.margin.right - 10, doc.internal.pageSize.height - 10);\n    };\n\n    // Before this, you should check if clinicLogo is not null and handle it as in your original code\n    if (formData.clinicLogo) {\n      const reader = new FileReader();\n      reader.onload = function (event) {\n        const imgData = event.target.result;\n        doc.addImage(imgData, 'JPEG', 15, 40, 50, 50); // Adjust position (x, y) and size (width, height) as needed\n\n        // Add other content after the image has been added\n        addContentToPDF(doc);\n        doc.save(filename);\n      };\n      reader.onerror = function (error) {\n        console.log('Error: ', error);\n      };\n      reader.readAsDataURL(formData.clinicLogo);\n    } else {\n      // If no logo, just add content and save\n      addContentToPDF(doc);\n      doc.save(filename);\n    }\n\n    // Header\n    doc.setFontSize(18);\n    doc.text('Medical Report', 14, 22);\n\n    // Optionally add more formatting here\n\n    // You would then call autoTable as follows\n    autoTable(doc, {\n      html: '#your-table-id',\n      // Your table ID if you have the data in an HTML table\n      didDrawPage: data => {\n        if (formData.clinicLogo) {\n          // You might have to adjust these coordinates according to the dimensions of your logo\n          doc.addImage(formData.clinicLogo, 'PNG', data.settings.margin.left, 15, 30, 15);\n        }\n      },\n      margin: {\n        top: 30\n      },\n      startY: doc.internal.pageSize.height / 2,\n      // You might want to calculate this based on your page content\n      theme: 'plain',\n      // Choose a theme or customize it as needed\n      footStyles: {\n        fillColor: [255, 255, 255]\n      },\n      // Optional styling for the footer\n      willDrawCell: data => {\n        // This can be used to format cells as needed, e.g., for text formatting\n      },\n      didDrawPage: footer // Adding the footer to each page\n    });\n\n    // Saving the document with the dynamic name\n    doc.save(filename);\n  };\n  function addContentToPDF(doc) {\n    const tableColumn = [\"Field\", \"Value\"];\n    const tableRows = [];\n    Object.keys(formData).forEach(key => {\n      if (key !== \"clinicLogo\") {\n        // Avoid adding the logo file reference as a text\n        tableRows.push([key, formData[key] instanceof File ? \"File Uploaded\" : formData[key]]);\n      }\n    });\n\n    // Optionally adjust startY based on your image size if logo is present\n    doc.autoTable({\n      head: [tableColumn],\n      body: tableRows,\n      startY: 100 // Adjust this value as needed to place the table below your image\n    });\n  }\n\n  // **************pdf generation*********************************\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const data = new FormData();\n    Object.keys(formData).forEach(key => {\n      data.append(key, formData[key]);\n    });\n    // Here you would typically send the data to a server or process it\n    generatePDF();\n    console.log(\"Form data ready to be sent to the server:\", data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"report-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Clinic Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"clinicName\",\n        value: formData.clinicName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Clinic Logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"clinicLogo\",\n        onChange: handleFileChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Physician Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"physicianName\",\n        value: formData.physicianName,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Physician Contact\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"physicianContact\",\n        value: formData.physicianContact,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Patient First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"patientFirstName\",\n          value: formData.patientFirstName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Patient Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"patientLastName\",\n          value: formData.patientLastName,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Patient DOB\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          name: \"patientDob\",\n          value: formData.patientDob,\n          onChange: handleChange,\n          placeholder: \"dd/mm/yyyy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Patient Contact\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"patientContact\",\n          value: formData.patientContact,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Chief Complaint\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"chiefComplaint\",\n        value: formData.chiefComplaint,\n        onChange: handleChange,\n        maxLength: \"5000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Consultation Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"consultationNote\",\n        value: formData.consultationNote,\n        onChange: handleChange,\n        maxLength: \"5000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Generate Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(ReportForm, \"iNwHKE+2ZK1jth/YEf6Iu70UVqY=\");\n_c = ReportForm;\nexport default ReportForm;\nvar _c;\n$RefreshReg$(_c, \"ReportForm\");","map":{"version":3,"names":["React","useState","jsPDF","autoTable","jsxDEV","_jsxDEV","ReportForm","_s","formData","setFormData","clinicName","physicianName","physicianContact","patientFirstName","patientLastName","patientDob","patientContact","chiefComplaint","consultationNote","clinicLogo","formErrors","setFormErrors","handleChange","e","name","value","target","prevState","handleFileChange","file","files","validateForm","errors","trim","Object","keys","length","generatePDF","doc","formatDate","date","toISOString","split","timestamp","Date","filename","footer","data","str","internal","getNumberOfPages","setFontSize","text","settings","margin","left","pageSize","height","width","right","reader","FileReader","onload","event","imgData","result","addImage","addContentToPDF","save","onerror","error","console","log","readAsDataURL","html","didDrawPage","top","startY","theme","footStyles","fillColor","willDrawCell","tableColumn","tableRows","forEach","key","push","File","head","body","handleSubmit","preventDefault","FormData","append","onSubmit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","placeholder","maxLength","_c","$RefreshReg$"],"sources":["/home/mohammed/Downloads/medical-report-frontend-main/front_end/src/pages/Report/ReportForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ReportForm.css\";\nimport { jsPDF } from \"jspdf\";\nimport autoTable from 'jspdf-autotable';\n\nconst ReportForm = () => {\n  const [formData, setFormData] = useState({\n    clinicName: \"\",\n    physicianName: \"\",\n    physicianContact: \"\",\n    patientFirstName: \"\",\n    patientLastName: \"\",\n    patientDob: \"\",\n    patientContact: \"\",\n    chiefComplaint: \"\",\n    consultationNote: \"\",\n    clinicLogo: null, // Added for the logo image file\n  });\n  const [formErrors, setFormErrors] = useState({});\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: value,\n    }));\n  };\n\n  const handleFileChange = (e) => {\n    const { name } = e.target;\n    const file = e.target.files[0];\n    setFormData((prevState) => ({\n      ...prevState,\n      [name]: file,\n    }));\n  };\n\n  const validateForm = () => {\n    const errors = {};\n    // Example validation, you can customize as needed\n    if (!formData.clinicName.trim()) {\n      errors.clinicName = \"Clinic name is required\";\n    }\n    if (!formData.physicianName.trim()) {\n      errors.physicianName = \"Physician name is required\";\n    }\n    if (!formData.patientFirstName.trim()) {\n      errors.patientFirstName = \"Patient first name is required\";\n    }\n    if (!formData.patientLastName.trim()) {\n      errors.patientLastName = \"Patient last name is required\";\n    }\n    if (!formData.patientDob) {\n      errors.patientDob = \"Patient date of birth is required\";\n    }\n    if (!formData.chiefComplaint.trim()) {\n      errors.chiefComplaint = \"Chief complaint is required\";\n    }\n    if (!formData.consultationNote.trim()) {\n      errors.consultationNote = \"Consultation note is required\";\n    }\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  // **************pdf generation*********************************\n\n  const generatePDF = () => {\n    const doc = new jsPDF();\n  \n    const formatDate = (date) => {\n      return date.toISOString().split('T')[0];\n    };\n  \n    const timestamp = formatDate(new Date());\n    const filename = `CR_${formData.patientLastName}_${formData.patientFirstName}_${formData.patientDob}.pdf`;\n  \n    // Page number footer callback\n    const footer = (data) => {\n      let str = 'Page ' + doc.internal.getNumberOfPages();\n      // Add a footer with the timestamp and IP (static example here)\n      doc.setFontSize(10);\n      doc.text(`This report is generated on ${timestamp}`, data.settings.margin.left, doc.internal.pageSize.height - 10);\n      doc.text(str, doc.internal.pageSize.width - data.settings.margin.right - 10, doc.internal.pageSize.height - 10);\n    };\n  \n    // Before this, you should check if clinicLogo is not null and handle it as in your original code\n    if (formData.clinicLogo) {\n      const reader = new FileReader();\n  \n      reader.onload = function(event) {\n        const imgData = event.target.result;\n        doc.addImage(imgData, 'JPEG', 15, 40, 50, 50); // Adjust position (x, y) and size (width, height) as needed\n  \n        // Add other content after the image has been added\n        addContentToPDF(doc);\n        doc.save(filename);\n      };\n  \n      reader.onerror = function(error) {\n        console.log('Error: ', error);\n      };\n  \n      reader.readAsDataURL(formData.clinicLogo);\n    } else {\n      // If no logo, just add content and save\n      addContentToPDF(doc);\n      doc.save(filename);\n    }\n  \n    // Header\n    doc.setFontSize(18);\n    doc.text('Medical Report', 14, 22);\n    \n    // Optionally add more formatting here\n  \n    // You would then call autoTable as follows\n    autoTable(doc, {\n      html: '#your-table-id', // Your table ID if you have the data in an HTML table\n      didDrawPage: (data) => {\n        if (formData.clinicLogo) {\n          // You might have to adjust these coordinates according to the dimensions of your logo\n          doc.addImage(formData.clinicLogo, 'PNG', data.settings.margin.left, 15, 30, 15);\n        }\n      },\n      margin: { top: 30 },\n      startY: doc.internal.pageSize.height / 2, // You might want to calculate this based on your page content\n      theme: 'plain', // Choose a theme or customize it as needed\n      footStyles: { fillColor: [255, 255, 255] }, // Optional styling for the footer\n      willDrawCell: data => {\n        // This can be used to format cells as needed, e.g., for text formatting\n      },\n      didDrawPage: footer, // Adding the footer to each page\n    });\n  \n    // Saving the document with the dynamic name\n    doc.save(filename);\n  };\n  \n  function addContentToPDF(doc) {\n    const tableColumn = [\"Field\", \"Value\"];\n    const tableRows = [];\n  \n    Object.keys(formData).forEach(key => {\n      if (key !== \"clinicLogo\") { // Avoid adding the logo file reference as a text\n        tableRows.push([key, formData[key] instanceof File ? \"File Uploaded\" : formData[key]]);\n      }\n    });\n  \n    // Optionally adjust startY based on your image size if logo is present\n    doc.autoTable({\n      head: [tableColumn],\n      body: tableRows,\n      startY: 100, // Adjust this value as needed to place the table below your image\n    });\n  }\n  \n // **************pdf generation*********************************\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const data = new FormData();\n    Object.keys(formData).forEach((key) => {\n      data.append(key, formData[key]);\n    });\n    // Here you would typically send the data to a server or process it\n    generatePDF();\n    console.log(\"Form data ready to be sent to the server:\", data);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"report-form\">\n      <div className=\"form-group\">\n        <label>Clinic Name</label>\n        <input\n          type=\"text\"\n          name=\"clinicName\"\n          value={formData.clinicName}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Clinic Logo</label>\n        <input\n          type=\"file\"\n          name=\"clinicLogo\"\n          onChange={handleFileChange}\n          accept=\"image/*\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Physician Name</label>\n        <input\n          type=\"text\"\n          name=\"physicianName\"\n          value={formData.physicianName}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Physician Contact</label>\n        <input\n          type=\"text\"\n          name=\"physicianContact\"\n          value={formData.physicianContact}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"form-row\">\n        <div className=\"form-group\">\n          <label>Patient First Name</label>\n          <input\n            type=\"text\"\n            name=\"patientFirstName\"\n            value={formData.patientFirstName}\n            onChange={handleChange}\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Patient Last Name</label>\n          <input\n            type=\"text\"\n            name=\"patientLastName\"\n            value={formData.patientLastName}\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n      <div className=\"form-row\">\n        <div className=\"form-group\">\n          <label>Patient DOB</label>\n          <input\n            type=\"date\"\n            name=\"patientDob\"\n            value={formData.patientDob}\n            onChange={handleChange}\n            placeholder=\"dd/mm/yyyy\"\n          />\n        </div>\n        <div className=\"form-group\">\n          <label>Patient Contact</label>\n          <input\n            type=\"text\"\n            name=\"patientContact\"\n            value={formData.patientContact}\n            onChange={handleChange}\n          />\n        </div>\n      </div>\n      <div className=\"form-group\">\n        <label>Chief Complaint</label>\n        <textarea\n          name=\"chiefComplaint\"\n          value={formData.chiefComplaint}\n          onChange={handleChange}\n          maxLength=\"5000\"\n        />\n      </div>\n      <div className=\"form-group\">\n        <label>Consultation Note</label>\n        <textarea\n          name=\"consultationNote\"\n          value={formData.consultationNote}\n          onChange={handleChange}\n          maxLength=\"5000\"\n        />\n      </div>\n      <button type=\"submit\">Generate Report</button>\n    </form>\n  );\n};\n\nexport default ReportForm;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}